#!/usr/bin/with-contenv bash
# shellcheck shell=bash


# Env variable validation
VARS=( \
WG_USER \
WG_PASS \
LOC
)

for i in "${VARS[@]}"; do
    if [ -z ${!i+x} ]; then
        if [[ "$i" == WG_USER ]] && [ -z ${WG_USER_FILE+x} ]; then
            echo "[cont-init.d] ${i} or WG_USER_FILE is required and is not set. Will not continue"
            exit 0
        elif [[ "$i" == WG_PASS ]]  && [ -z ${WG_PASS_FILE+x} ]; then
            echo "[cont-init.d] ${i} or WG_PASS_FILE is required and is not set. Will not continue"
            exit 0
        elif [[ "$i" == LOC ]]; then
            if [ -z ${PIA_CN+x} ] || [ -z ${PIA_IP+x} ] || [ -z ${PIA_PORT+x} ]; then
                echo "[cont-init.d] ${i} or PIA_CN & PIA_IP & PIA_PORT is required and is not set. Will not continue"
                exit 0
        fi
    fi
fi
done

apk add --no-cache \
    wireguard-tools \
    ca-certificates \
    iptables \
    ip6tables

# Sanitize inputs
[[ "$WG_USERSPACE" == true ]] || WG_USERSPACE=false

# Install wireguard-go as a fallback if wireguard is not supported by the host OS or Linux kernel
if [[ $WG_USERSPACE == true ]]; then
    apk add --no-cache --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing \
        wireguard-go
fi

# Modify wg-quick so it doesn't die without --privileged
# Set net.ipv4.conf.all.src_valid_mark=1 on container creation using --sysctl if required instead
# To avoid confusion, also suppress the error message that displays even when pre-set to 1 on container creation
sed -i 's/cmd sysctl.*/set +e \&\& sysctl -q net.ipv4.conf.all.src_valid_mark=1 \&> \/dev\/null \&\& set -e/' /usr/bin/wg-quick

# Get the PIA CA cert (is copied to /config/wireguard)
curl -fsSL "https://raw.githubusercontent.com/pia-foss/desktop/master/daemon/res/ca/rsa_4096.crt" > /defaults/wireguard/rsa_4096.crt

# Create default dirs in /config/wireguard
while IFS= read -r -d '' dir
do
    if [[ ! -d "$dir" ]]; then
        echo "[cont-init.d] Creating wireguard directory in \"$dir\""
        mkdir -p "$dir"
    fi
done <   <(find /defaults/wireguard -type d -print0 | sed 's/defaults/config/')

# Copy default files to /config/wireguard
while IFS= read -r -d '' file
do
    if [[ ! -f "$file" ]]; then
        echo "[cont-init.d] Installing default file in \"$file\""
        cp "$(location="$file" ; echo "${location//config/defaults}")" "$file"
    fi
done <   <(find /defaults/wireguard -type f -print0 | sed 's/defaults/config/')

chown abc:abc -R "/config/wireguard"
